@model Sklep.Models.ModelViews.PersonRegistration

@{
    ViewBag.Title = "Logowanie";
}

<style>
    .contForm{
        display: grid;
        grid-template-columns: 1fr 1fr;
        grid-column-gap: 20px;
        place-items: left;
    }
    .leftForm {
        display: grid;
        grid-row-gap: 10px;
    }
         .rightForm > .object {
            width: max-content;
            display: grid;
            padding: 0;
            height: min-content;
        }
        .leftForm > .object {
            width: max-content;
            display: grid;
            padding: 0;
        }
        .leftForm > .object > div > .inputStyle {
            outline: none;
            border: none;
            border-radius: 5px;
            background-color: #eeeeed;
            box-shadow: rgba(0,0,0,0.2) 0px 1px 2px 0px;
            padding: 5px;
            text-indent: 5px;
        }
    .rightForm > .object > div > .inputStyle {
        outline: none;
        border: none;
        border-radius: 5px;
        padding: 5px;
        background-color: #eeeeed;
        box-shadow: rgba(0,0,0,0.2) 0px 1px 2px 0px;
        text-indent: 5px;
    }
        content #forMain > form{
        place-items: center;
    }

    content#forMain > form > input[type=submit] {
        outline: none;
        background-color: #FC6D84;
        border: none;
        border-radius: 5px;
        padding: 10px 20px 10px 20px;
        box-shadow: 0px 2px 3px 0px rgba(0,0,0,0.15);
        transition: 0.08s;
        font-size: 16px;
        color: #fff;
        font-weight: 400;
        font-family: Inter;
        text-align: center;
        width: min-content;
        height: min-content;
    }

    content#forMain > form > input[type=submit]:hover {
        padding-left: 25px;
        padding-right: 25px;
        padding-top: 8px;
        padding-bottom: 12px;
        transition: 0.15s;
        cursor: pointer;
    }
             label{
                height: 24px;
            }
</style>
<content id="forMain">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <h4>Rejestracja</h4>
        <hr />
        <div class="contForm">
            <div class="leftForm">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="object">
                    @Html.LabelFor(model => model.Login)
                    <div >
                        @Html.EditorFor(model => model.Login, new { htmlAttributes = new { @class = "inputStyle" } })
                        @Html.ValidationMessageFor(model => model.Login, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="object">
                    @Html.LabelFor(model => model.PasswordConfirm, new { htmlAttributes = new { @class = "labelStyle" } })
                    <div >
                        @Html.EditorFor(model => model.PasswordConfirm, new { htmlAttributes = new { @class = "inputStyle" }  })
                        @Html.ValidationMessageFor(model => model.PasswordConfirm, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="object">
                    @Html.LabelFor(model => model.Email, new { htmlAttributes = new { @class = "labelStyle" } })
                    <div >
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "inputStyle" } } )
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="object">
                    @Html.LabelFor(model => model.LastName, new { htmlAttributes = new { @class = "labelStyle" } })
                    <div >
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "inputStyle" }  })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="object">
                    @Html.LabelFor(model => model.BirthDate, new { htmlAttributes = new { @class = "labelStyle" } })
                    <div >
                        @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "inputStyle" } } )
                        @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="rightForm">
                <div class="object">
                    @Html.LabelFor(model => model.Password, new { htmlAttributes = new { @class = "labelStyle" } })
                    <div>
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "inputStyle" } } )
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="object">
                    @Html.LabelFor(model => model.EmailConfirm, new { htmlAttributes = new { @class = "labelStyle" } })
                    <div >
                        @Html.EditorFor(model => model.EmailConfirm, new { htmlAttributes = new { @class = "inputStyle" } } )
                        @Html.ValidationMessageFor(model => model.EmailConfirm, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="object">
                    @Html.LabelFor(model => model.FirstName, new { htmlAttributes = new { @class = "labelStyle" } })
                    <div >
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "inputStyle" } } )
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="object">
                    @Html.LabelFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "labelStyle" } })
                    <div>
                        @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "inputStyle" } })
                        @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <input type="submit" value="Stwórz konto" />
        <div>
            @Html.ActionLink("Wróć do logowania", "Login")
        </div>
    }
</content>
   
